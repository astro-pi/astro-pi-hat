#!/usr/bin/python

# Event handler for RPi SenseHat joystick
# Copyright (C) 2015 Stefano Zacchiroli <zack@upsilon.cc>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#
#     * Neither the name of the copyright holder nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

from sense_hat import SenseStick

import os
import subprocess


HOOK_ROOT = '/etc/joystick.d'

KEY_NAMES = {
    SenseStick.KEY_UP:    'up',
    SenseStick.KEY_DOWN:  'down',
    SenseStick.KEY_LEFT:  'left',
    SenseStick.KEY_RIGHT: 'right',
    SenseStick.KEY_ENTER: 'push',
}

STATE_NAMES = {
    SenseStick.STATE_PRESS:   'press',
    SenseStick.STATE_HOLD:    'hold',
    SenseStick.STATE_RELEASE: 'release',
}


def run_hooks(state, key):
    hook_dir = os.path.join(HOOK_ROOT, state, key)
    if os.path.isdir(hook_dir):
        subprocess.call(['run-parts',
                         '--arg', state,
                         '--arg', key,
                         hook_dir])


def joystick_loop(j):
    for event in j:
        key_state = STATE_NAMES[event.state]
        key_name = KEY_NAMES[event.key]
        run_hooks(key_state, key_name)


if __name__ == '__main__':
    joystick_loop(SenseStick())
